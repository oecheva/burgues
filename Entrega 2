CREATE SCHEMA burgues;

USE burgues;

-- CREAR TABLAS

CREATE TABLE Clientes (
	id_cliente INT AUTO_INCREMENT PRIMARY KEY,
	nombre VARCHAR(30) not null,
    apellido VARCHAR(30) not null,
    dni VARCHAR(20) not null,
	direc VARCHAR(100) NOT NULL,
	nro_telf VARCHAR(20) NOT NULL);
    
    CREATE TABLE Ordenes (
	id_orden INT AUTO_INCREMENT PRIMARY KEY,
	id_cliente INT not null,
    fecha DATETIME not null,
	estado VARCHAR(20) NOT NULL);
    
    CREATE TABLE Productos (
	id_producto INT AUTO_INCREMENT PRIMARY KEY,
	nombre VARCHAR(30) not null,
    descripcion VARCHAR(200) not null,
	Precio DECIMAL(7,2) NOT NULL);
    
    CREATE TABLE Empleados (
	id_empleado INT AUTO_INCREMENT PRIMARY KEY,
	nombre VARCHAR(30) not null,
    cargo VARCHAR(30) not null,
	salario DECIMAL(7,2) NOT NULL);
        
    CREATE TABLE DetalleOrdenes (
	id_detalle INT AUTO_INCREMENT PRIMARY KEY,
	id_orden INT not null,
    id_producto INT not null,
    id_empleado INT not null,
	cantidad INT NOT NULL);
    
    CREATE TABLE Inventario (
	id_inventario INT AUTO_INCREMENT PRIMARY KEY,
    insumo VARCHAR(20) not null,
	id_proveedor INT not null,
    medida VARCHAR(20) not null,
    stock DECIMAL(7,2) not null);
       
    CREATE TABLE Recetas (
	id_receta INT AUTO_INCREMENT PRIMARY KEY,
	id_producto INT not null,
    id_inventario INT not null,
    insumo VARCHAR(30) not null,
	cantidad DECIMAL(7,2) NOT NULL);
    
    CREATE TABLE Proveedores (
	id_proveedor INT AUTO_INCREMENT PRIMARY KEY,
	nombre VARCHAR(50) not null,
    Contacto VARCHAR(50) not null,
    Telefono VARCHAR(20) not null,
	correo VARCHAR(50) NOT NULL,
    insumo VARCHAR(30) not null);
    
-- CREAR RELACIONES

ALTER TABLE ordenes
ADD CONSTRAINT fk_ordenes_cliente
FOREIGN KEY (id_cliente) REFERENCES Clientes(id_cliente);

ALTER TABLE DetalleOrdenes
ADD CONSTRAINT fk_detalleordenes_orden
FOREIGN KEY (id_orden) REFERENCES ordenes(id_orden);

ALTER TABLE DetalleOrdenes
ADD CONSTRAINT fk_detalleordenes_producto
FOREIGN KEY (id_producto) REFERENCES Productos(id_producto);

ALTER TABLE DetalleOrdenes
ADD CONSTRAINT fk_detalleordenes_empleados
FOREIGN KEY (id_empleado) REFERENCES empleados(id_empleado);

ALTER TABLE Inventario
ADD CONSTRAINT fk_inventario_proveedor
FOREIGN KEY (id_proveedor) REFERENCES proveedores(id_proveedor);

ALTER TABLE recetas
ADD CONSTRAINT fk_recetas_producto
FOREIGN KEY (id_producto) REFERENCES productos(id_producto);

ALTER TABLE recetas
ADD CONSTRAINT fk_recetas_inventario
FOREIGN KEY (id_inventario) REFERENCES inventario(id_inventario);

-- POBLAMOS LAS TABLAS

INSERT INTO Proveedores (nombre, contacto, Telefono, correo, insumo)
VALUES ("Panadería La Esquina", "Juan Pérez", "555-1234", "info@panaderialaesquina.com", "Pan"),
	("Carnicería San José", "María Rodríguez", "555-5678", "ventas@carniceriasanjose.com", "Carne"),
    ("Lácteos Delicias", "Pedro González", "555-9012", "pedro@lacteosdelicias.com", "Queso cheddar"),
    ("Embutidos El Campesino", "José Martínez", "555-3456", "jose@embutidoselcampesino.com", "Tocino"),
    ("Salsas Caseras", "Ana López", "555-7890", "ventas@salsascaseras.com", "Salsas"),
    ("Especias Naturales", "Luis Hernández", "555-2345", "luis@especiasnaturales.com", "Especias"),
    ("Verduras Frescas", "Marta Sánchez", "555-6789", "marta@hortalizasfrescas.com", "Verduras"),
    ("Productos Variados", "Alberto Pérez", "555-4321", "info@proveeduriaelcampo.com", "Cebolla caramelizada");

INSERT INTO Clientes (nombre, apellido, DNI, direc, nro_telf)
VALUES 
    ("Juan", "Pérez", "12345678", "Av. Principal 123", "555-123456"),
    ("María", "González", "45678901", "Calle Secundaria 456", "555-789012"),
    ("Pedro", "Martínez", "78901234", "Jr. Independencia 789", "555-345678"),
    ("Ana", "López", "10111213", "Av. Libertad 101", "555-987654"),
    ("Carlos", "Rodríguez", "54321011", "Calle Primera 543", "555-543210"),
    ("Laura", "Gómez", "23141516", "Jr. Huancavelica 231", "555-135790"),
    ("Luis", "Fernández", "76417281", "Av. Tacna 764", "555-246801"),
    ("Sofía", "Díaz", "87928291", "Calle Arequipa 879", "555-802467"),
    ("Javier", "Sánchez", "54329301", "Jr. Huánuco 543", "555-642580"),
    ("Rosa", "Martínez", "76530411", "Av. Puno 765", "555-359068"),
    ("Diego", "Chávez", "23415416", "Calle Moquegua 234", "555-968135"),
    ("Mónica", "Ramos", "90817281", "Jr. Junín 908", "555-471592"),
    ("Andrea", "Torres", "34518291", "Av. Lambayeque 345", "555-280467"),
    ("Ricardo", "Luna", "43219201", "Calle Loreto 432", "555-701234"),
    ("Natalia", "Alvarez", "65420211", "Av. Ayacucho 654", "555-913780"),
    ("Gabriel", "Herrera", "21022231", "Jr. Ucayali 210", "555-536914"),
    ("Fernanda", "Flores", "34523241", "Calle Amazonas 345", "555-849623"),
    ("Pablo", "Jiménez", "54325261", "Av. San Martín 543", "555-372819"),
    ("Carmen", "García", "98726271", "Jr. Cusco 987", "555-916304"),
    ("Daniel", "Ortega", "65428291", "Calle Lima 654", "555-248579");
        
INSERT INTO Empleados (nombre, cargo, salario)
VALUES 	("Juan García", "Cocinero", 2000.00),
		("María Martínez", "Cocinero", 1500.00),
		("Pedro López", "Cocinero", 1800.00),
		("Ana Pérez", "Cocinero", 1900.00),
		("Carlos Rodríguez", "Cocinero", 2500.00),
		("Laura Sánchez", "Cocinero", 1500.00),
		("Luis Fernández", "Cocinero", 1800.00),
		("Sofía González", "Cocinero", 2000.00),
		("Javier Hernández", "Cocinero", 2000.00),
		("Rosa Díaz", "Cocinero", 1800.00);
        

INSERT INTO Productos (id_producto, nombre, descripcion, Precio)
VALUES 
    (1, "Hamburguesa Clásica", "Hamburguesa con carne, lechuga, tomate y cebolla caramelizada.", 19.99),
    (2, "Hamburguesa BBQ", "Hamburguesa con carne, queso cheddar, tocino, cebolla caramelizada, salsa BBQ y lechuga.", 20.99),
    (3, "Hamburguesa Doble", "Doble carne, lechuga, tomate, queso cheddar, cebolla caramelizada", 21.99),
    (4, "Hamburguesa con Queso", "Hamburguesa con carne, queso cheddar, lechuga, tomate y cebolla caramelizada", 18.99);
    
INSERT INTO Ordenes (id_cliente, fecha, estado)
VALUES 
    (1, "2022-07-01", "terminado"),
    (1, "2022-11-15", "terminado"),
    (2, "2022-08-05", "terminado"),
    (2, "2022-12-20", "terminado"),
    (3, "2022-07-10", "terminado"),
    (3, "2022-09-22", "terminado"),
    (4, "2022-08-18", "terminado"),
    (4, "2022-10-30", "terminado"),
    (5, "2022-09-01", "terminado"),
    (5, "2022-12-05", "terminado"),
    (6, "2022-07-28", "terminado"),
    (6, "2022-11-10", "terminado"),
    (7, "2022-08-12", "terminado"),
    (7, "2022-10-25", "terminado"),
    (8, "2022-09-06", "terminado"),
    (8, "2022-12-15", "terminado"),
    (9, "2022-07-17", "terminado"),
    (9, "2022-11-28", "terminado"),
    (10, "2022-08-22", "terminado"),
    (10, "2022-10-10", "terminado"),
    (11, "2022-09-03", "terminado"),
    (11, "2022-12-08", "terminado"),
    (12, "2022-07-05", "terminado"),
    (12, "2022-11-18", "terminado"),
    (13, "2022-08-15", "terminado"),
    (13, "2022-10-20", "terminado"),
    (14, "2022-09-08", "terminado"),
    (14, "2022-12-25", "terminado"),
    (15, "2022-07-20", "terminado"),
    (15, "2022-11-30", "terminado"),
    (16, "2022-08-25", "terminado"),
    (16, "2022-10-15", "terminado"),
    (17, "2022-09-13", "terminado"),
    (17, "2022-12-12", "terminado"),
    (18, "2022-07-24", "terminado"),
    (18, "2022-11-05", "terminado"),
    (19, "2022-08-08", "terminado"),
    (19, "2022-10-28", "terminado"),
    (20, "2022-09-19", "terminado"),
    (20, "2022-12-22", "terminado");

INSERT INTO DetalleOrdenes (id_orden, id_producto, id_empleado, cantidad)
VALUES 
    (1, 1, 1, 2),   
    (2, 2, 2, 3),   
    (3, 3, 3, 4),   
    (4, 4, 4, 5),   
    (5, 1, 6, 3),   
    (6, 2, 7, 1),   
    (7, 3, 8, 2),   
    (8, 4, 9, 3),   
    (9, 1, 10, 1),  
    (10, 2, 1, 2),  
    (11, 3, 2, 3),  
    (12, 4, 3, 4),  
    (13, 1, 4, 2),  
    (14, 2, 5, 3),  
    (15, 3, 6, 1),  
    (16, 4, 7, 2),  
    (17, 1, 8, 3),  
    (18, 2, 9, 1),  
    (19, 3, 10, 2), 
    (20, 4, 1, 3),
    (21, 1, 2, 2),
    (22, 2, 3, 3),
    (23, 3, 4, 1),
    (24, 4, 5, 2),
    (25, 1, 6, 3),
    (26, 2, 7, 1),
    (27, 3, 8, 2),
    (28, 4, 9, 3),
    (29, 1, 10, 1),
    (30, 2, 1, 2),
    (31, 3, 2, 3),
    (32, 4, 3, 1),
    (33, 1, 4, 2),
    (34, 2, 5, 3),
    (35, 3, 6, 1),
    (36, 4, 7, 2),
    (37, 1, 8, 3),
    (38, 2, 9, 1),
    (39, 3, 10, 2),
    (40, 4, 1, 3);
    
INSERT INTO Inventario (insumo, id_proveedor, medida, stock)
VALUES 	("pan", 1, "unidades", 100),
		("carne", 2, "gramos", 5000),
		("cheddar", 3, "tajadas", 50),
		("tocino", 4, "tiras", 60),
		("mayonesa", 5, "litros", 10),
		("ketchup", 5, "litros", 10),
        ("salsa especial", 5, "litros", 10),
        ("BBQ", 5, "litros", 10),
		("sal", 6, "kilos", 5),
		("pimienta", 6, "kilos", 5),
		("lechuga", 7, "porciones", 50),
		("tomate", 7, "porciones", 50),
		("cebolla caramelizada", 8, "porciones", 50);
        
INSERT INTO Recetas (id_producto, id_inventario, insumo, cantidad)
VALUES 
	-- Clasica
    (1, 1, "pan", 1),
    (1, 2, "carne", 1),
    (1, 11, "lechuga", 1),
    (1, 12, "tomate", 1),
    (1, 13, "cebolla caramelizada", 1),
    -- BBQ
    (2, 1, "pan", 1),
    (2, 2, "carne", 1),
    (2, 3, "cheddar", 1),
    (2, 4, "tocino", 1),
    (2, 13, "cebolla caramelizada", 1),
    (2, 8, "BBQ", 1),
    (2, 11, "lechuga", 1),
    -- Doble
    (3, 1, "pan", 1),
    (3, 2, "carne", 2),
    (3, 3, "cheddar", 1),
    (3, 11, "lechuga", 1),
    (3, 12, "tomate", 1),
    (3, 13, "cebolla caramelizada", 1),
    -- Cheese
    (4, 1, "pan", 2),
    (4, 2, "carne", 1),
    (4, 3, "cheddar", 1),
    (4, 11, "lechuga", 1),
    (4, 12, "tomate", 1),
    (3, 13, "cebolla caramelizada", 1);

-- FORMULARIOS

-- VISTAS CREADAS

-- VISTA CLIENTES QUE MÁS COMPRAN
CREATE OR REPLACE VIEW ClientesMasFrecuentes AS
SELECT 
    Clientes.id_cliente,
    CONCAT(Clientes.nombre, ' ', Clientes.apellido) AS nombre_cliente,
    COUNT(Ordenes.id_orden) AS total_ordenes
FROM
    Clientes
        JOIN Ordenes ON Clientes.id_cliente = Ordenes.id_cliente
GROUP BY Clientes.id_cliente, nombre_cliente
ORDER BY total_ordenes DESC
LIMIT 5;

-- SELECT * FROM ClientesMasFrecuentes;

-- VISTA RENDIMIENTO DE EMPLEADOS
CREATE OR REPLACE VIEW RendimientoEmpleados AS
SELECT 
    Empleados.id_empleado,
    Empleados.nombre AS nombre_empleado,
    COUNT(DetalleOrdenes.id_orden) AS total_ordenes_atendidas
FROM
    Empleados
        JOIN DetalleOrdenes ON Empleados.id_empleado = DetalleOrdenes.id_empleado
GROUP BY Empleados.id_empleado, nombre_empleado
ORDER BY total_ordenes_atendidas DESC;

-- SELECT * FROM RendimientoEmpleados;

-- VISTA POPULARIDAD DE PRODUCTOS

CREATE OR REPLACE VIEW PopularidadProductos AS
SELECT 
    Productos.id_producto,
    Productos.nombre AS nombre_producto,
    SUM(DetalleOrdenes.cantidad) AS total_unidades_vendidas
FROM
    Productos
        JOIN DetalleOrdenes ON Productos.id_producto = DetalleOrdenes.id_producto
GROUP BY Productos.id_producto, nombre_producto
ORDER BY total_unidades_vendidas DESC;

-- SELECT * FROM POPULARIDADPRODUCTOS;


-- FUNCIONES 

-- FUNCIÓN: CALCULAR TOTAL DE UN PEDIDO

DELIMITER $$
CREATE FUNCTION CalcularTotalPedido(precio INT, cantidad INT) RETURNS DECIMAL (7,2)
NO SQL
BEGIN
DECLARE montototal DECIMAL (7,2);
SET montototal = (precio * cantidad);
RETURN montototal;
END
$$

-- SELECT CalcularTotalPedido(20,2) AS TotalPedido;

-- FUNCIÓN: MOSTRAR STOCK DE UN PRODUCTO

DELIMITER //
CREATE FUNCTION StockInsumo(producto varchar(20)) Returns INT
DETERMINISTIC
BEGIN
DECLARE resultado INT;
SET resultado = (SELECT SUM(stock) FROM inventario where insumo = producto);
RETURN resultado; 
END
//

-- SELECT StockInsumo("pan") AS TotalStock;


-- STORED PROCEDURES

-- SP Inserta Nuevo Cliente
DELIMITER //
CREATE PROCEDURE SP_InsertarCliente (
    IN p_nombre VARCHAR(30),
    IN p_apellido VARCHAR(30),
    IN p_direc VARCHAR(100),
    IN p_nro_telf VARCHAR(20)
)
BEGIN
    INSERT INTO Clientes (nombre, apellido, direc, nro_telf)
    VALUES (p_nombre, p_apellido, p_direc, p_nro_telf);
END 
//

-- SP Registra nueva Orden
DELIMITER $$
CREATE PROCEDURE SP_CrearOrden (
    IN p_id_cliente INT,
    IN p_fecha DATETIME,
    IN p_estado VARCHAR(20)
)
BEGIN
    INSERT INTO Ordenes (id_cliente, fecha, estado)
    VALUES (p_id_cliente, p_fecha, p_estado);
END 
$$
